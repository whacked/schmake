# global variables are any simple key-value pairs
SCHEMAS_DIR: ./schemas
GENERATORS_DIR: ./generators

# if "out" is not specified
# the entry key does not "look like" a file,
# output goes to stdout
self-validate:
  in: ${SCHEMAS_DIR}/sdflow.yaml.schema.json
  run: check-jsonschema --schemafile $in sdflow.yaml

# if "out" is not specified,
# AND the entry key begins with a file identifier
# (ONLY ./, / are recognized),
# the entry key is taken as the output file path
${SCHEMAS_DIR}/sdflow.yaml.schema.json:
  in: ${GENERATORS_DIR}/sdflow.yaml.schema.jsonnet
  run: jsonnet $in | jq -S | tee $out
  out.sha256: 1c8a656566dacfaaaece7b5e3e52a59faca12d3803443a1a56fdd5a9a7b8e347

${SCHEMAS_DIR}/runnable.schema.json:
  in: ${GENERATORS_DIR}/runnable.schema.jsonnet
  run: jsonnet $in | jq -S | tee $out

# multiple inputs
schemas:
  - ${SCHEMAS_DIR}/sdflow.yaml.schema.json
  - ${SCHEMAS_DIR}/runnable.schema.json

build:
  in: # currently sha256 is only supported for single input
    - main.go
    - ./runnable.go
    - util.go
  out: build/bin/sdflow
  # make dirs for nix build compat
  run: mkdir -p $(dirname $out); go build -o $out $in; ln -sf ./build ./result

./runnable.go:
  in:
  - ${SCHEMAS_DIR}/runnable.schema.json
  - main
  run: go-jsonschema -p ${in[1]} ${in[0]} | tee $out

example-web-loader:
  in: https://example.com
  in.sha256: ea8fac7c65fb589b0d53560f5251f74f9e9b243478dcb6b3ea79b5e36449c8d9
  run: curl -s $in | grep -i title

example-web-loader-to-disk:
  in: https://example.com
  out: example.com-index.html
  out.sha256: ea8fac7c65fb589b0d53560f5251f74f9e9b243478dcb6b3ea79b5e36449c8d9

example-s3-loader:
  in: s3://answer-reformulation-pds/README.txt
  in.sha256: b24b59e210cefd4d964413ac555e4573470909f8aa3d16b6b9a65ddb04490b69
  run: date

example-s3-loader-to-disk:
  in: s3://answer-reformulation-pds/README.txt
  out: answer-reformulation-pds-README.txt
  out.sha256: b24b59e210cefd4d964413ac555e4573470909f8aa3d16b6b9a65ddb04490b69
